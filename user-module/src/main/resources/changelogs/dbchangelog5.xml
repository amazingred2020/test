<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:pro="http://www.liquibase.org/xml/ns/pro" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-4.1.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.1.xsd">
    <changeSet  author="liquibase-docs"  id="2021-07-23 14-59-1">
        <createTable tableName="accounts">
            <column autoIncrement="true" name="id" type="BIGINT">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="number" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="money" type="DECIMAL(8, 2)"
                defaultValue="0.00">
            </column>
            <column name="user_id" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="created_at" type="datetime"
                defaultValue="now()">
                <constraints nullable="false"/>
            </column>
            <column name="updated_at" type="datetime"
                defaultValue="now()">
            </column>
        </createTable>
    </changeSet>
    <changeSet author="liquibase-docs"  id="2021-07-23 14-59-3">
        <addForeignKeyConstraint baseColumnNames="user_id" baseTableName="accounts" constraintName="fk_accounts_users2" deferrable="false" initiallyDeferred="false" onDelete="RESTRICT" onUpdate="RESTRICT" referencedColumnNames="id" referencedTableName="users" validate="true"/>
    </changeSet>
    <changeSet author="liquibase-docs"  id="2021-07-23 14-59-4">
        <sql splitStatements="false">
            CREATE or REPLACE FUNCTION update_date()
            RETURNS TRIGGER
            AS
            $$
            BEGIN
            NEW.updated_at = NOW();
            return NEW;
            end;
            $$
            LANGUAGE plpgsql;

            CREATE TRIGGER update_date_users before update ON users
            FOR EACH ROW
            EXECUTE PROCEDURE update_date();
        </sql>
    </changeSet>
</databaseChangeLog>